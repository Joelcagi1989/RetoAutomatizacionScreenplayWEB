repositories {
    mavenCentral()
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.4.4")
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
dependencies {
    testImplementation 'net.serenity-bdd:serenity-core:1.1.1'
    testImplementation 'net.serenity-bdd:serenity-junit:1.1.1'
    testImplementation('junit:junit:4.13.1')
    testImplementation('org.assertj:assertj-core:1.7.0')
    testImplementation('org.slf4j:slf4j-simple:1.7.7')
    implementation 'net.serenity-bdd:serenity-core:1.9.9'
    implementation 'net.serenity-bdd:serenity-junit:1.9.9'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.5'
    implementation 'net.serenity-bdd:serenity-screenplay:1.9.9'
    implementation 'net.serenity-bdd:serenity-screenplay-webdriver:1.9.9'
    implementation "org.apache.poi:poi-ooxml:3.17"
    implementation "org.apache.poi:poi:3.17"
}
gradle.startParameter.continueOnFailure = true


/*
defaultTasks 'clean', 'test', 'aggregate'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:3.3.10"
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '3.3.10'
    serenityCucumberVersion = '3.3.10'
    junitVersion = '4.13.1'
    assertJVersion = '3.23.1'
    logbackVersion = '1.2.10'
}

dependencies {
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"

    testImplementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "junit:junit:${junitVersion}",
            "org.junit.platform:junit-platform-launcher:1.8.2",
            "org.junit.jupiter:junit-jupiter-engine:5.8.2",
            "org.junit.vintage:junit-vintage-engine:5.8.2",
            "org.assertj:assertj-core:${assertJVersion}"
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

serenity {
    // Specify the root package of any JUnit acceptance tests to appear in the Serenity report
    //testRoot = "starter"
    // Specify the root directory of any Cucumber feature files
    requirementsDir = "src/test/resources/features"

}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)

 */
